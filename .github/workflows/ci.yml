name: CI

on:
  pull_request:
    branches: [master]
env:
  tf_version: "1.2.0" # Must be within range specified in main.tf
  node_version: "16.x"
  TF_IN_AUTOMATION: true

jobs:
  env:
    name: Set Env Vars
    runs-on: ubuntu-latest
    steps:
      - name: Set up DEV Environment Variables
        if: github.base_ref == 'master'
        run: |
          matrix='{
            "env":[
              {
                "tf_working_dir":"./examples/simple",
                "aws_key_name":"byu_oit_terraform_dev_key",
                "aws_secret_name":"byu_oit_terraform_dev_secret",
                "tf_plan_extra_args":""
              },
              {
                "tf_working_dir":"./examples/advanced",
                "aws_key_name":"byu_oit_terraform_dev_key",
                "aws_secret_name":"byu_oit_terraform_dev_secret",
                "tf_plan_extra_args":"-var 'postman_api_key=fake_api_key'"
              }
            ]
          }'
          echo matrix=`echo $matrix | jq -c .` >> $GITHUB_ENV

    outputs:
      matrix: ${{ env.matrix }}

  format:
    name: Terraform Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform Format
        working-directory: "./"
        run: terraform fmt -check -recursive

  plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    needs: env
    strategy:
      matrix: ${{ fromJson(needs.env.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets[matrix.env.aws_key_name] }}
          aws-secret-access-key: ${{ secrets[matrix.env.aws_secret_name] }}
          aws-region: us-west-2

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.tf_version }}

      - name: Terraform Init
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform init

      - name: Terraform Plan
        working-directory: ${{ matrix.env.tf_working_dir }}
        run: terraform plan -input=false -out=plan ${{ matrix.env.tf_plan_extra_args }}

      - name: Comment Terraform Plan
        uses: byu-oit/github-action-tf-plan-comment@v1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          working-directory: ${{ matrix.env.tf_working_dir }}
          terraform-plan-file: plan
          comment-title: Terraform Plan for ${{ matrix.env.tf_working_dir }}

  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}

      - name: npm install
        working-directory: lambda
        run: npm install --production

  audit:
    name: Audit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}

      - name: npm audit
        working-directory: lambda
        run: npm audit --audit-level=critical

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ env.node_version }}

      - name: npm install
        working-directory: lambda
        run: npm install

      - name: npm lint
        working-directory: lambda
        run: npm run lint
